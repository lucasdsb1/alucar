/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Classes.Clientes;
import DAO.ClientesDAO;
import java.awt.Dimension;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author l_dsb
 */
public class cadCliForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form cadCliForm
     */
    public cadCliForm() {
        initComponents();
        readListaCli();

    }

    public static boolean instanciaCadCli = false;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        tabCrudCadastro = new javax.swing.JPanel();
        lblNome = new javax.swing.JLabel();
        txtNomeCad = new javax.swing.JTextField();
        lblEndereco = new javax.swing.JLabel();
        txtEnderecoCad = new javax.swing.JTextField();
        lblData = new javax.swing.JLabel();
        txtDataCad = new javax.swing.JFormattedTextField();
        cmbSexoCad = new javax.swing.JComboBox<>();
        lblSexo = new javax.swing.JLabel();
        lblCPF = new javax.swing.JLabel();
        lblCivil = new javax.swing.JLabel();
        cmbEstadoCivil = new javax.swing.JComboBox<>();
        lblRG = new javax.swing.JLabel();
        txtRGCad = new javax.swing.JTextField();
        lblUF = new javax.swing.JLabel();
        txtUFCad = new javax.swing.JFormattedTextField();
        lblCidade = new javax.swing.JLabel();
        txtCidadeCad = new javax.swing.JTextField();
        btnCadastrar = new javax.swing.JButton();
        btnSairCad = new javax.swing.JButton();
        txtCpfCad = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnAtualizarCli = new javax.swing.JButton();
        btnExcluiCli = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        tabListaCli = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableListaCli = new javax.swing.JTable();
        btnAtualizarListaCli = new javax.swing.JButton();
        txtBuscarCli = new javax.swing.JTextField();
        btnBuscarCli = new javax.swing.JButton();
        lblbusca = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Clientes");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        lblNome.setText(" Nome:");

        lblEndereco.setText(" Endereço:");

        lblData.setText(" Data de Nascimento:");

        try {
            txtDataCad.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataCad.setToolTipText("");

        cmbSexoCad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione:", "Masculino", "Feminino", "Prefiro não informar" }));

        lblSexo.setText(" Sexo:");

        lblCPF.setText(" CPF:");

        lblCivil.setText(" Estado Civil:");

        cmbEstadoCivil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione:", "Solteiro", "Casado", "Divorciado", "Prefiro não informar" }));

        lblRG.setText(" RG:");
        lblRG.setToolTipText("");

        lblUF.setText(" UF:");

        try {
            txtUFCad.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("AA")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lblCidade.setText(" Cidade:");

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnSairCad.setText("Sair");
        btnSairCad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairCadActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar Cliente");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnAtualizarCli.setText("Atualizar Cliente");
        btnAtualizarCli.setEnabled(false);
        btnAtualizarCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarCliActionPerformed(evt);
            }
        });

        btnExcluiCli.setText("Excluir Cliente");
        btnExcluiCli.setEnabled(false);
        btnExcluiCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluiCliActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar campos");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabCrudCadastroLayout = new javax.swing.GroupLayout(tabCrudCadastro);
        tabCrudCadastro.setLayout(tabCrudCadastroLayout);
        tabCrudCadastroLayout.setHorizontalGroup(
            tabCrudCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCrudCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabCrudCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCidadeCad)
                    .addComponent(txtEnderecoCad)
                    .addComponent(txtNomeCad, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tabCrudCadastroLayout.createSequentialGroup()
                        .addGroup(tabCrudCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtDataCad, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                            .addComponent(lblData, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNome, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEndereco, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCPF, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRG, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRGCad)
                            .addComponent(txtCpfCad))
                        .addGroup(tabCrudCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabCrudCadastroLayout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addGroup(tabCrudCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbEstadoCivil, javax.swing.GroupLayout.Alignment.TRAILING, 0, 165, Short.MAX_VALUE)
                                    .addComponent(cmbSexoCad, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(tabCrudCadastroLayout.createSequentialGroup()
                                        .addGroup(tabCrudCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblUF)
                                            .addComponent(lblCivil)
                                            .addComponent(lblSexo)
                                            .addComponent(txtUFCad, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabCrudCadastroLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(btnSairCad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(tabCrudCadastroLayout.createSequentialGroup()
                        .addComponent(lblCidade)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(tabCrudCadastroLayout.createSequentialGroup()
                        .addComponent(btnLimpar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExcluiCli)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAtualizarCli)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        tabCrudCadastroLayout.setVerticalGroup(
            tabCrudCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCrudCadastroLayout.createSequentialGroup()
                .addGroup(tabCrudCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabCrudCadastroLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblNome))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabCrudCadastroLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBuscar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtNomeCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblEndereco)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEnderecoCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(tabCrudCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblData)
                    .addComponent(lblSexo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabCrudCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDataCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSexoCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(tabCrudCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCPF)
                    .addComponent(lblCivil))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabCrudCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCpfCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(tabCrudCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRG)
                    .addComponent(lblUF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabCrudCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRGCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUFCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblCidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCidadeCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(tabCrudCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAtualizarCli)
                    .addComponent(btnExcluiCli)
                    .addComponent(btnCadastrar)
                    .addComponent(btnLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSairCad)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Gerencia de clientes", tabCrudCadastro);

        tabListaCli.setName(""); // NOI18N

        jScrollPane1.setToolTipText("");

        tableListaCli.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "CPF", "Idade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableListaCli.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableListaCliMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableListaCli);

        btnAtualizarListaCli.setText("Atualizar Lista");
        btnAtualizarListaCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarListaCliActionPerformed(evt);
            }
        });

        btnBuscarCli.setText("Buscar");
        btnBuscarCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCliActionPerformed(evt);
            }
        });

        lblbusca.setText(" Buscar por CPF:");

        jLabel1.setText("Dica: Um clique exibe o CPF, dois cliques exibe os dados completos.");

        javax.swing.GroupLayout tabListaCliLayout = new javax.swing.GroupLayout(tabListaCli);
        tabListaCli.setLayout(tabListaCliLayout);
        tabListaCliLayout.setHorizontalGroup(
            tabListaCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabListaCliLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabListaCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabListaCliLayout.createSequentialGroup()
                        .addGroup(tabListaCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabListaCliLayout.createSequentialGroup()
                                .addComponent(lblbusca)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtBuscarCli))
                        .addGap(18, 18, 18)
                        .addGroup(tabListaCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAtualizarListaCli, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                            .addComponent(btnBuscarCli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(tabListaCliLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
        );
        tabListaCliLayout.setVerticalGroup(
            tabListaCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabListaCliLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(tabListaCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblbusca)
                    .addComponent(btnAtualizarListaCli))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabListaCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscarCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarCli))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Lista de clientes", tabListaCli);
        readListaCli();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed

        instanciaCadCli = false;

    }//GEN-LAST:event_formInternalFrameClosed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed

        Clientes c = new Clientes();
        ClientesDAO cdao = new ClientesDAO();

        if (txtNomeCad.getText().isEmpty() || txtCpfCad.getText().isEmpty() || txtDataCad.getText().equals("  /  /    ")) {

            JOptionPane.showMessageDialog(null, "Os campos 'Nome', 'CPF' e 'Data' são obrigatórios!");

        } else {

            c.setNomeCli(txtNomeCad.getText());

            if (!txtEnderecoCad.getText().equals("")) {

                c.setEnderecoCli(txtEnderecoCad.getText());

            }

            c.setDataCli(txtDataCad.getText());

            if (!cmbSexoCad.getSelectedItem().equals("Selecione:")) {

                c.setSexoCli(cmbSexoCad.getSelectedItem().toString());

            }

            c.setCpfCli(txtCpfCad.getText());

            if (!cmbEstadoCivil.getSelectedItem().equals("Selecione:")) {

                c.setEstadocivilCli(cmbEstadoCivil.getSelectedItem().toString());

            }

            if (!txtRGCad.getText().equals("")) {

                c.setRgCli(txtRGCad.getText());

            }

            if (!txtUFCad.getText().equals("")) {

                c.setUfCli(txtUFCad.getText());

            }

            if (!txtCidadeCad.getText().equals("")) {

                c.setCidadeCli(txtCidadeCad.getText());

            }

            if (cdao.cadastraCli(c) == true) {

                JOptionPane.showMessageDialog(null, "Cadastro realizado com sucesso!");

            }
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnSairCadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairCadActionPerformed

        dispose();

    }//GEN-LAST:event_btnSairCadActionPerformed

    private void btnAtualizarListaCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarListaCliActionPerformed

        readListaCli();

    }//GEN-LAST:event_btnAtualizarListaCliActionPerformed

    private void btnBuscarCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCliActionPerformed

        DefaultTableModel modelo = (DefaultTableModel) tableListaCli.getModel();

        for (int i = 0; i < modelo.getRowCount(); i++) {

            if (txtBuscarCli.getText().equals(modelo.getValueAt(i, 1))) {

                tableListaCli.setRowSelectionInterval(i, i);

            }

        }

    }//GEN-LAST:event_btnBuscarCliActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        
        String CPF = JOptionPane.showInputDialog("Digite o CPF que deseja buscar: ");

        recebeBuscaCli(CPF);

        if (!txtNomeCad.getText().isEmpty()) {

            btnExcluiCli.setEnabled(true);
            btnAtualizarCli.setEnabled(true);
            btnCadastrar.setEnabled(false);
            txtCpfCad.setEnabled(false);
            
        }

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed

        txtNomeCad.setText(null);
        txtEnderecoCad.setText(null);
        txtDataCad.setText(null);
        txtCpfCad.setText(null);
        txtRGCad.setText(null);
        txtUFCad.setText(null);
        txtCidadeCad.setText(null);
        cmbEstadoCivil.setSelectedItem("Selecione:");
        cmbSexoCad.setSelectedItem("Selecione:");
        btnExcluiCli.setEnabled(false);
        btnAtualizarCli.setEnabled(false);
        btnCadastrar.setEnabled(true);

    }//GEN-LAST:event_btnLimparActionPerformed

    private void tableListaCliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableListaCliMouseClicked

        DefaultTableModel modelo = (DefaultTableModel) tableListaCli.getModel();
        String line = modelo.getValueAt(tableListaCli.getSelectedRow(), 1).toString();

        if (evt.getClickCount() == 2) {

            recebeBuscaCli(line);
            jTabbedPane1.setSelectedIndex(0);
            btnExcluiCli.setEnabled(true);
            btnAtualizarCli.setEnabled(true);
            btnCadastrar.setEnabled(false);
            txtCpfCad.setEnabled(false);

        } else if (evt.getClickCount() == 1) {

            txtBuscarCli.setText(line);

        }

    }//GEN-LAST:event_tableListaCliMouseClicked

    private void btnExcluiCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluiCliActionPerformed

        Clientes c = new Clientes();
        ClientesDAO edao = new ClientesDAO();

        int choice = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir?", "Exclusão", JOptionPane.YES_NO_OPTION);

        if (choice == JOptionPane.YES_OPTION) {

            c.setCpfCli(txtCpfCad.getText());

            if (edao.excluirCli(c)) {

                JOptionPane.showMessageDialog(null, "Cliente excluido com sucesso!");

            }

        txtNomeCad.setText(null);
        txtEnderecoCad.setText(null);
        txtDataCad.setText(null);
        txtCpfCad.setText(null);
        txtRGCad.setText(null);
        txtUFCad.setText(null);
        txtCidadeCad.setText(null);
        cmbEstadoCivil.setSelectedItem("Selecione:");
        cmbSexoCad.setSelectedItem("Selecione:");
        btnExcluiCli.setEnabled(false);
        btnAtualizarCli.setEnabled(false);
        btnCadastrar.setEnabled(true);

    }//GEN-LAST:event_btnExcluiCliActionPerformed
    }

    private void btnAtualizarCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarCliActionPerformed

        Clientes c = new Clientes();
        ClientesDAO adao = new ClientesDAO();

        int choice = JOptionPane.showConfirmDialog(null, "Deseja realmente alterar?", "Alteração", JOptionPane.YES_NO_OPTION);

        if (choice == JOptionPane.YES_OPTION) {

            c.setCpfCli(txtCpfCad.getText());

            c.setNomeCli(txtNomeCad.getText());
            c.setEnderecoCli(txtEnderecoCad.getText());
            c.setDataCli(txtDataCad.getText());
            c.setRgCli(txtRGCad.getText());
            c.setUfCli(txtUFCad.getText());
            c.setCidadeCli(txtCidadeCad.getText());
            c.setEstadocivilCli(cmbEstadoCivil.getSelectedItem().toString());
            c.setSexoCli(cmbSexoCad.getSelectedItem().toString());

            if (adao.alterarCli(c)) {

                JOptionPane.showMessageDialog(null, "Cliente atualizado com sucesso!");

            }

    }//GEN-LAST:event_btnAtualizarCliActionPerformed
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizarCli;
    private javax.swing.JButton btnAtualizarListaCli;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarCli;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnExcluiCli;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnSairCad;
    private javax.swing.JComboBox<String> cmbEstadoCivil;
    private javax.swing.JComboBox<String> cmbSexoCad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblCidade;
    private javax.swing.JLabel lblCivil;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblEndereco;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblRG;
    private javax.swing.JLabel lblSexo;
    private javax.swing.JLabel lblUF;
    private javax.swing.JLabel lblbusca;
    private javax.swing.JPanel tabCrudCadastro;
    private javax.swing.JPanel tabListaCli;
    private javax.swing.JTable tableListaCli;
    private javax.swing.JTextField txtBuscarCli;
    private javax.swing.JTextField txtCidadeCad;
    private javax.swing.JTextField txtCpfCad;
    private javax.swing.JFormattedTextField txtDataCad;
    private javax.swing.JTextField txtEnderecoCad;
    private javax.swing.JTextField txtNomeCad;
    private javax.swing.JTextField txtRGCad;
    private javax.swing.JFormattedTextField txtUFCad;
    // End of variables declaration//GEN-END:variables

    public void setPosicao() {

        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);

    }

    public void readListaCli() {

        DefaultTableModel modelo = (DefaultTableModel) tableListaCli.getModel();
        modelo.setNumRows(0);
        ClientesDAO cdao = new ClientesDAO();

        for (Clientes c : cdao.listaCli()) {

            modelo.addRow(new Object[]{
                c.getNomeCli(),
                c.getCpfCli(),
                c.getDataCli(),});

        }

    }

    public void recebeBuscaCli(String CPF) {

        ClientesDAO bdao = new ClientesDAO();

        for (Clientes c : bdao.buscaCli(CPF)) {

            txtNomeCad.setText(c.getNomeCli());
            txtEnderecoCad.setText(c.getEnderecoCli());
            txtDataCad.setText(c.getDataCli());
            txtCpfCad.setText(c.getCpfCli());
            txtRGCad.setText(c.getRgCli());
            txtUFCad.setText(c.getUfCli());
            txtCidadeCad.setText(c.getCidadeCli());
            cmbEstadoCivil.setSelectedItem(c.getEstadocivilCli());
            cmbSexoCad.setSelectedItem(c.getSexoCli());

        }

    }

}
